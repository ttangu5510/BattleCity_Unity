테스트 씬 만들기
최대한 빨리 게임의 핵심 기능(플레이어, 적, 승패조건, 포탄)들을 구현 한 후 테스트 씬을 만들어 각자의 branch로 나눈다
테스트 씬에서 각자 기능 구현, 구현한 기능의 테스트 등을 진행한다
폴더 나누기
폴더 만들기 단계는 main branch에서 진행 된다. 구성원들의 동의 하에 만들어진다
모든 구성원들은 각자의 이니셜+작업내용으로된 폴더를 만들고 해당 폴더 안에서 작업을 한다 (ex. JYL_Bullet, CJM_Player 등)
폴더는 새로운 기능들을 구현할 때 마다 생성한다. 단, 기존의 기능을 구현 완료하고 만들어야 한다
폴더를 최초 생성 시, 각자의 폴더 안에 Asset 폴더 내용들을 옮겨 담는다. (현재의 최신화 된 main 버전으로 작업)
폴더를 만든 이후, 각자의 branch로 넘어가 작업한다
구현이 완료된 폴더는 내용들을 Asset 폴더로 옮긴후 삭제한다 (옮기기 전 기존의 Asset 폴더는 백업을 한다!)
develop으로 commit & push를 하기 전에 먼저 테스트를 해야한다!. (자세한 것은 뒤에 설명)
브랜치 나누기
브랜치를 필요에 따라 나누도록 한다
기본적으로 삭제되지 않는 브랜치(개인이 건들면 안됨), 개인 작업공간 브랜치로 나누어진다
삭제 하지 않는 branch
main, develop, hotfix
main
버전 관리 중, 프로젝트의 출시 버전을 나타낸다
절대 삭제하면 안된다
절대 협의 없이 이곳으로 merge나 commit & push 하면 안된다
하루에 한번, 일과를 마무리 할 때 main으로 작업 내용들을 merge한다
단, merge를 하기 전에 test branch를 만들어 충돌, 또는 실행에 버그가 생기는지 한 명씩 테스트 하면서 병합을 완료 한 후 문제가 없는 버전으로 merge한다
test
main에 병합 하기 전에 구현하고자 하는 기능들이 올바르게 작동하는지 확인하기 위한 branch
develop에 commit & push 하기 전에 **본인의 이름 이니셜+test branch**를 만든다
해당 branch로 commit & push를 한 후 테스트를 진행한다. 이상이 없으면 develop으로 merge 한 후, 만들어둔 test branch는 삭제한다
develop
하루 일과의 작업들을 merge 하는 branch. 삭제하면 안된다
일반적으로 일과 중 구현 완료된 기능들을 이곳으로 commit & push 한다. 앞서 설명했듯이 test를 먼저 거쳐야 한다
hotfix
실수로 main, develop branch에서 실행 실패와 같은 중대한 문제 발생 시 급하게 해결하기 위해 해당 branch를 이용한다
문제가 생긴 버전을 hotfix로 merge 한 다음, 문제를 해결한다. 문제가 생겼던 main, develop은 이전 버전으로 되돌린다
쓰지 않을 수록 성공적인 프로젝트다
문제를 해결하면 다시 develop으로 merge하면 된다
이전 버전으로 되돌리는 방법

깃허브 History를 보면서, 이전에 성공적이였던 버전까지 수정된 파일들을 하나하나 다시 수정 및 작성한 다음 commit & push해서 되돌린다
절대 revert는 쓰지 않는다
일과 마무리
마무리가 된 기능들은 develop에 merge된다.
마무리가 되지 않았다면 일과가 끝난 후 -> test로 한 명씩 merge한다 ( 실행에 제약이 있을 경우, 스크립트는 주석처리한다)
문제가 발견되지 않으면 main으로 merge한다
하루 일과 과정 총 정리
main에서 Pull origin해서 버전 최신화 함
본인의 기능에 해당하는 폴더를 각각 생성 후, branch들도 그에 맞게 생성한다
구성원 모두가 각자의 branch에서 작업을 한다
기능 구현이 완료되면 test -> develop 순으로 commit & push 한다. 그리고 개인의 작업 branch, test branch는 삭제한다
만약, 다른 구성원이 사용하는 데 필요한 기능이 급한 것을 구현했다면 모두가 해당 버전의 develop을 Pull 한다
하루 일과가 끝나면 모두 test -> develop 순으로 commit & push 한다
develop이 정상적이라면 main으로 merge, 그렇지 않다면 hotfix 과정으로 간다